quarkus.http.port=8080
quarkus.http.test-port=8888
%dev.quarkus.http.port=8811
%test.quarkus.http.port=7711
%server.quarkus.http.port=6611
quarkus.http.enable-compression=true
quarkus.http.test-ssl-port=8446
# Disabling SSL verifications
quarkus.tls.trust-all=true

# Orders API configuration properties
quarkus.rest-client.orders-api.url=http://localhost:8083
quarkus.rest-client.orders-api.scope=javax.inject.Singleton
quarkus.rest-client.orders-api.hostname-verifier=io.quarkus.restclient.NoopHostnameVerifier

# Delivery API configuration properties
quarkus.rest-client.delivery-api.url=http://localhost:8082
quarkus.rest-client.delivery-api.scope=javax.inject.Singleton
quarkus.rest-client.delivery-api.hostname-verifier=io.quarkus.restclient.NoopHostnameVerifier

# Your configuration properties
#greeting.message = hello
#greeting.name = Azat Akhunov
#server.environments[0].name=dev
#server.environments[0].apps[0].name=rest
#server.environments[0].apps[0].services=bookstore,registration
#server.environments[0].apps[0].databases=pg,h2
#server.environments[0].apps[1].name=batch
#server.environments[0].apps[1].services=stock,warehouse
#quarkus.package.uber-jar=true
# configure your datasource
#quarkus.datasource.db-kind = postgresql
#quarkus.datasource.username = sarah
#quarkus.datasource.password = connor
#quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/mydatabase
# drop and create the database at startup (use `update` to only update the schema)
#quarkus.hibernate-orm.database.generation = drop-and-create
#quarkus.redis.hosts=redis://localhost:6379